const fs = require("fs");
const path = require("path");
const glob = require("glob");

if (process.argv.length < 3) {
  console.log("Usage: node generate-todo.js <path to CampfireApi repo>");
  return;
}

const campfireApiRepo = process.argv[2];
const campfireApiGlob = path.join(campfireApiRepo, "src/main/java/com/dzen/campfire/api/requests/**/*.kt");

const requestList = [];

const files = glob.sync(campfireApiGlob);
for (const file of files) {
  const parsed = path.parse(file);
  requestList.push({
    name: parsed.name,
    used: false,
  });
}

const sourceFiles = glob.sync("./pages/**/*.js");
for (const file of sourceFiles) {
  const source = fs.readFileSync(file);
  for (let i = 0; i < requestList.length; i++) {
    if ( // i know, ineffective af. i'm just lazy
      source.includes('"' + requestList[i].name + '"') ||
      source.includes("'" + requestList[i].name + "'")
    ) {
      requestList[i].used = true;
      break;
    }
  }
}

let todo = "";
todo += "# TODO list\n";
todo += "An autogenerated list of used and unused requests.\n\n";
todo += "Use `$ node generate-todo.js <CampfireApi path>` to regenerate\n\n";

for (const request of requestList) {
  todo += "* [" + (request.used ? "*" : " ") + "] " + request.name + "\n";
}

fs.writeFileSync("./TODO.md", todo);

console.log("generated todo");
